---
layout: post
title:  "TurtleBot Simulation"
date:   2015-02-01 13:46:29
answerrostag: "simulation"
track: [main]
---

*This article was graciously written by [Tarik Kelestemur](https://github.com/tkelestemur).*

Working inside a simulation simplifies and speeds up testing new applications and algorithms by virtualizing TurtleBot and its environment. In this tutorial we will use the [Gazebo](http://gazebosim.org/) simulation platform that supports ROS and maintained by [OSRFoundation](http://www.osrfoundation.org/).

To create a TurtleBot simulation you will need to install ROS and TurtleBot packages on you computer ([this tutorial provides a walkthrough](http://learn.turtlebot.com/2015/02/01/5/)). 

Gazebo 2 is built-in to ROS Indigo and installs with the ROS packages, you will need to install the TurtleBot simulation packages separately. To do this, open a terminal and run:

{% highlight sh %}	
sudo apt-get install ros-indigo-turtlebot-apps ros-indigo-turtlebot-rviz-launchers 
{% endhighlight %}
	
We are now ready to start an simulation. In the terminal run:

{% highlight sh %}
roslaunch turtlebot_gazebo turtlebot_world.launch
{% endhighlight %}

You should see an environment, called a Gazebo world, with TurtleBot and some other objects. 


{% include image.html img="/assets/gazebo_world.jpg" title="Gazebo World with TurtleBot" %}

***TIP:*** *If you don't see any objects be sure to add some (the video below shows adding objects)*

***TIP:*** *If your view doesn't look like the image above you may need to rearrage it. To do this, click the 4-arrow icon at the top of the window and move your mouse while holding the middle mouse button.*

***NOTE:*** *When you first launch Gazebo it may take a few minutes to update its model database.*

{% include youtube.html youtubeid="x_qNg6sN6wk" youtubetitle="Gazebo ROS - Translation & Rotation" %}

Right now TurtleBot doesn't do anything, lets launch the teleop package so we can move it around the environment. 

Open a new terminal and run:

{% highlight sh %}
roslaunch turtlebot_teleop keyboard_teleop.launch
{% endhighlight %}
	
When you press 'i', 'j', 'l' etc. (the full command list is in the terminal window) you'll see TurtleBot move around. 
 
***NOTE:*** *We need to keep this window in the foreground (i.e. above the Gazebo window) in order to use teleop commands. You may want to move it towards a corner of the screen to keep it out of the way, but be sure its the top-most window.*
 
While you are moving around the environment you can see what TurtleBot sees using the RViz tool. 

Open another terminal and run:

{% highlight sh %}
roslaunch turtlebot_rviz_launchers view_robot.launch
{% endhighlight %}
	
Enable DepthCloud option from left-bar and you will see TurtleBot's depth vision (the video below demonstrates this). Move the teleop terminal to the foreground and move TurtleBot around. 

{% include image.html img="/assets/gazebo_rviz.png" title="Depth Vision - RViz Tool" %}

{% include youtube.html youtubeid="OmujYqYL6uo" youtubetitle="Gazebo ROS + RViz" %}

## Creating a Map

Let's create a map of the environment so TurtleBot can navigate autonomously. 

Close RViz by pressing CTRL + C in the corresponding terminals. Then run: 
	
{% highlight sh %}	
roslaunch turtlebot_gazebo gmapping_demo.launch
{% endhighlight %}

While the map is being created we can use RViz see what's happening. Open a new terminal and run: 

{% highlight sh %}
roslaunch turtlebot_rviz_launchers view_navigation.launch
{% endhighlight %}

Bring the teleop terminal window to the foreground and navigate around the environment until you've created a map sufficent for autonomous movement. When you're finished, open a new terminal window and run this command to save your map (replacing "your map name" with the name of your map): 

{% highlight sh %}
rosrun map_server map_saver -f <your map name>
{% endhighlight %}

{% include image.html img="/assets/gazebo_rviz2.png" title="World Map - RViz Tool" %}

## Autonomous Driving

Now that we have our map, its time for autonomous navigation. Close all terminals. 

Open a new window and run:

{% highlight sh %}
roslaunch turtlebot_gazebo turtlebot_world.launch
{% endhighlight %}

Open another terminal window and run (replacing "full path to your map file" with the full path to the map file you want to use): 

{% highlight sh %}
roslaunch turtlebot_gazebo amcl_demo.launch map_file:=<full path to your map file>
{% endhighlight %}

***TIP:*** *If you have just created your map, you may omit the 'map_file' command.*
	
Open one more terminal window and run: 

{% highlight sh %}	
roslaunch turtlebot_rviz_launchers view_navigation.launch
{% endhighlight %}

This last command launches RViz ready for autonomous navigation. We can now set a 2D Nav Goal to give TurtleBot a destination just as we did in [this tutorial](http://learn.turtlebot.com/2015/02/01/12/). 